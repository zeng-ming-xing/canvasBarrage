var t={props:{url:{type:String,default:""},lineNum:{type:Number,default:4},lineSpace:{type:Number,default:30},parentList:{type:Array,default:()=>[]},customSpeed:{type:Array,default:null},authorInfo:{type:Object,default:()=>({})}},data(){return{list:[],lineMaxHeightList:Array(this.lineNum).fill(null).map((()=>0)),speed:Array(this.lineNum).fill(0).map(((t,n)=>({speed:(1*Math.random()+2.5).toFixed(1),row:n+1}))),imgList:[{name:"莲花",id:1,url:"https://image.brightfuture360.com/static/temple/randeng/box-1.png",dom:null,fontSize:26,rate:4}],canvasWidth:null,drawIng:!1,authorImg:null,stamp:null,dpr:1,rem2px:50,itemProps:{defaultProps:{fontSize:"27",color:"#FFFFFF",backgroundColor:"rgba(0,0,0,0.3)",borderRadius:"51px",padding:"14-23",text:"content"},specialProps:{color:"#9D6A0C",backgroundColor:"#FFF0C8"}}}},created(){this.lineList=Array(this.lineNum).fill(null).map((()=>[])),this.drawList=[]},mounted(){this.initData()},methods:{async initData(){this.dpr=window.devicePixelRatio,this.canvasWidth=this.$refs.brrageCanvas.getBoundingClientRect().width*this.dpr,this.canvasHeight=this.$refs.brrageCanvas.getBoundingClientRect().height*this.dpr,this.rem2px=+window.getComputedStyle(document.documentElement).fontSize.slice(0,-2),this.$refs.brrageCanvas.width=this.canvasWidth,this.$refs.brrageCanvas.height=this.canvasHeight,this.ctx=this.$refs.brrageCanvas.getContext("2d"),this.customSpeed&&(this.speed=this.customSpeed),this.list=this.parentList,this.list.forEach((t=>{this.appendItem(t,!0)}))},getRow(){const t=this.lineList.findIndex((t=>0===t.length));if(t>-1)return t+1;return this.lineList.map((t=>t[t.length-1])).reduce(((t,n)=>(t?t.left+t.canvas.width>n.left+n.canvas.width&&(t=n):t=n,t)),null).row},getSpeed(t){return this.speed.find((n=>n.row===t)).speed},getImage(){return this.imgList[Math.floor(Math.random()*this.imgList.length)]},draw(t){this.drawIng=!0,this.ctx.clearRect(0,0,this.canvasWidth,this.canvasHeight);for(let n=0;n<this.drawList.length;n++){const e=this.drawList[n];if(e){if(e.left<-e.canvas.width)this.lineList[e.row-1].splice(0,1),this.appendItem(e,!1);else if(this.stamp&&t){const n=t-this.stamp;e.left-=(e.speed/16.7*n).toFixed(1)}else e.left-=e.speed;this.ctx.drawImage(e.canvas,e.left,e.top)}}this.stamp=t,window.requestAnimationFrame(this.draw)},getTop(t){let n=0;if(1===t)n=0;else{for(let e=0;e<t-1;e++)n+=this.lineMaxHeightList[e];n+=(t-1)*this.lineSpace}return n},async appendItem(t,n){const e={};if(!t.canvas){let n=t.wish||t[this.itemProps.defaultProps.text];const r=t.userId==this.authorInfo.userId;r&&(n=this.authorInfo.username+"："+n);const i=await this.createCanvasImg(e.dom,e.fontSize||this.itemProps.defaultProps.fontSize,n&&n.length>19?n.slice(0,20)+"...":n,e.rate,r);t.canvas=i}const r=this.getRow(),i=this.getSpeed(r),s=this.getTop(r);if(t.row=r,t.speed=i,this.lineList[r-1].length){const n=this.lineList[r-1].slice(-1)[0];t.top=s,n.left+n.canvas.width<this.canvasWidth?t.left=this.canvasWidth+10:t.left=n.left+n.canvas.width+10}else t.top=s,t.left=this.canvasWidth;this.lineMaxHeightList[r-1]<t.canvas.height&&(this.lineMaxHeightList[r-1]=t.canvas.height),this.lineList[r-1].push(t),n&&(this.drawList.push(t),console.log(this.drawList.length)),this.drawIng||this.draw()},async createCanvasImg(t,n,e,r=3,i){const s=this.rem2px/100*this.dpr,a=document.createElement("canvas"),o=a.getContext("2d");n*=s,o.font=`${n}px serif`;const h=o.measureText(e).width,l=60*s,c=76*s+h+(i?92*s:0),d=l/2;if(a.height=l,a.width=c,o.fillStyle=i?this.itemProps.specialProps.backgroundColor:this.itemProps.defaultProps.backgroundColor,o.beginPath(),o.arc(d,d,d,Math.PI/2,1.5*Math.PI),o.lineTo(i?d+h+38*s:d+h,0),o.arc(i?d+h+38*s:d+h,d,d,1.5*Math.PI,Math.PI/2),o.lineTo(d,l),o.closePath(),o.fill(),o.fillStyle=(i?this.itemProps.specialProps.color:this.itemProps.defaultProps.color)||"#000000",o.font=`${n}px serif`,i){let t=null;this.authorImg?t=this.authorImg:(t=await this.clipImg(this.authorInfo.useravatar||"https://static.zhimingfoxue.com/templeimg/20220411172932t6eojh.png",38*s,38*s,"cover",19*s),this.authorImg=t),o.drawImage(t,d,Math.ceil(n/4),38*s,38*s),o.drawImage(imgV,d+26*s,Math.ceil(n/4)+25*s,13*s,13*s),o.fillText(e,d+46*s,d+Math.ceil(n/4))}else o.fillText(e,d,d+Math.ceil(n/4));return a},clipImg:(t,n,e,r,i)=>new Promise((s=>{const a=document.createElement("canvas");a.width=n,a.height=e;const o=a.getContext("2d"),h=new Image;h.onload=()=>{const t=h.width/h.height,l=n/e;i&&Math.min(n,e)/2>=i&&(o.beginPath(),o.moveTo(0,i),o.arc(i,i,i,-Math.PI,-Math.PI/2),o.lineTo(n-i,0),o.arc(n-i,i,i,-Math.PI/2,0),o.lineTo(n,e-i),o.arc(n-i,e-i,i,0,Math.PI/2),o.lineTo(i,e),o.arc(i,e-i,i,Math.PI/2,Math.PI),o.lineTo(0,i),o.clip()),"cover"===r&&(t>l?o.drawImage(h,(h.width-l*h.height)/2,0,l*h.height,h.height,0,0,n,e):o.drawImage(h,0,(h.height-h.width/l)/2,h.width,h.width/l,0,0,n,e)),s(a)},h.src=t}))}};function n(t,n,e,r,i,s,a,o,h,l){"boolean"!=typeof a&&(h=o,o=a,a=!1);const c="function"==typeof e?e.options:e;let d;if(t&&t.render&&(c.render=t.render,c.staticRenderFns=t.staticRenderFns,c._compiled=!0,i&&(c.functional=!0)),r&&(c._scopeId=r),s?(d=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),n&&n.call(this,h(t)),t&&t._registeredComponents&&t._registeredComponents.add(s)},c._ssrRegister=d):n&&(d=a?function(t){n.call(this,l(t,this.$root.$options.shadowRoot))}:function(t){n.call(this,o(t))}),d)if(c.functional){const t=c.render;c.render=function(n,e){return d.call(e),t(n,e)}}else{const t=c.beforeCreate;c.beforeCreate=t?[].concat(t,d):[d]}return e}const e="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function r(t){return(t,n)=>function(t,n){const r=e?n.media||"default":t,a=s[r]||(s[r]={ids:new Set,styles:[]});if(!a.ids.has(t)){a.ids.add(t);let e=n.source;if(n.map&&(e+="\n/*# sourceURL="+n.map.sources[0]+" */",e+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),a.element||(a.element=document.createElement("style"),a.element.type="text/css",n.media&&a.element.setAttribute("media",n.media),void 0===i&&(i=document.head||document.getElementsByTagName("head")[0]),i.appendChild(a.element)),"styleSheet"in a.element)a.styles.push(e),a.element.styleSheet.cssText=a.styles.filter(Boolean).join("\n");else{const t=a.ids.size-1,n=document.createTextNode(e),r=a.element.childNodes;r[t]&&a.element.removeChild(r[t]),r.length?a.element.insertBefore(n,r[t]):a.element.appendChild(n)}}}(t,n)}let i;const s={};const a=t;var o=function(){var t=this.$createElement;return(this._self._c||t)("canvas",{ref:"brrageCanvas",staticClass:"canvas"})};o._withStripped=!0;const h=n({render:o,staticRenderFns:[]},(function(t){t&&t("data-v-640e1b60_0",{source:'.canvas {\n  width: 7.5rem;\n  height: 10rem;\n}\n.box-0 {\n  display: flex;\n  justify-content: flex-start;\n}\n.box-0 .content {\n  text-align: center;\n  height: 72px;\n  line-height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat center top/300% 72px;\n  white-space: nowrap;\n}\n.box-0::before {\n  display: block;\n  overflow: hidden;\n  content: "";\n  width: 100px;\n  height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat left top/375px 72px;\n}\n.box-0::after {\n  display: block;\n  overflow: hidden;\n  content: "";\n  width: 100px;\n  height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat right top/375px 72px;\n}\n\n/*# sourceMappingURL=canvasBarrage.vue.map */',map:{version:3,sources:["E:\\work\\z-canvas-barrage\\src\\canvasBarrage.vue","canvasBarrage.vue"],names:[],mappings:"AAiWA;EACA,aAAA;EACA,aAAA;AChWA;ADkWA;EACA,aAAA;EACA,2BAAA;AC/VA;ADgWA;EACA,kBAAA;EACA,YAAA;EACA,iBAAA;EACA,iHAAA;EACA,mBAAA;AC9VA;ADgWA;EACA,cAAA;EACA,gBAAA;EACA,WAAA;EACA,YAAA;EACA,YAAA;EACA,gHAAA;AC9VA;ADgWA;EACA,cAAA;EACA,gBAAA;EACA,WAAA;EACA,YAAA;EACA,YAAA;EACA,iHAAA;AC9VA;;AAEA,4CAA4C",file:"canvasBarrage.vue",sourcesContent:["\x3c!--\r\n * @Author: zmx\r\n * @Date: 2022-10-14 10:20:49\r\n * @LastEditors: zmx\r\n * @LastEditTime: 2022-10-20 10:29:15\r\n * @Description: canvas 佛学弹幕墙\r\n--\x3e\r\n<template>\r\n  <canvas ref=\"brrageCanvas\" class=\"canvas\"></canvas>\r\n  \x3c!-- <div class=\"test1\"> <div class=\"content\">我是123就老师开定价啥都看风景143</div> </div> --\x3e\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    url: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    // 行数\r\n    lineNum: {\r\n      type: Number,\r\n      default: 4,\r\n    },\r\n    // 每一行的距离\r\n    lineSpace: {\r\n      type: Number,\r\n      default: 30,\r\n    },\r\n    // 数据\r\n    parentList: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    // 每一行速度\r\n    customSpeed: {\r\n      type: Array,\r\n      default: null,\r\n    },\r\n    authorInfo: {\r\n      type: Object,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      lineMaxHeightList: Array(this.lineNum)\r\n        .fill(null)\r\n        .map(() => {\r\n          return 0\r\n        }),\r\n      speed: Array(this.lineNum)\r\n        .fill(0)\r\n        .map((item, index) => {\r\n          return { speed: (Math.random() * 1 + 2.5).toFixed(1), row: index + 1 }\r\n        }),\r\n      // 随机选取的背景图片数组\r\n      imgList: [\r\n        {\r\n          name: '莲花',\r\n          id: 1,\r\n          url: 'https://image.brightfuture360.com/static/temple/randeng/box-1.png',\r\n          dom: null,\r\n          fontSize: 26,\r\n          rate: 4,\r\n        },\r\n      ],\r\n      canvasWidth: null,\r\n      drawIng: false,\r\n      authorImg: null,\r\n      stamp: null,\r\n      dpr: 1,\r\n      rem2px: 50,\r\n      itemProps:{\r\n          defaultProps: {\r\n            fontSize: '27',\r\n            color: '#FFFFFF',\r\n            backgroundColor: 'rgba(0,0,0,0.3)',\r\n            borderRadius: '51px',\r\n            padding: '14-23',\r\n            text: 'content',\r\n          },\r\n          specialProps: {\r\n            color: '#9D6A0C',\r\n            backgroundColor: '#FFF0C8',\r\n          },\r\n        }\r\n    }\r\n  },\r\n  created() {\r\n      this.lineList = Array(this.lineNum)\r\n        .fill(null)\r\n        .map(() => {\r\n          return []\r\n        })\r\n      this.drawList = []\r\n  },\r\n  mounted() {\r\n    this.initData()\r\n  },\r\n  methods: {\r\n    async initData() {\r\n      this.dpr = window.devicePixelRatio\r\n      this.canvasWidth = this.$refs.brrageCanvas.getBoundingClientRect().width * this.dpr\r\n      this.canvasHeight = this.$refs.brrageCanvas.getBoundingClientRect().height * this.dpr\r\n      this.rem2px = +window.getComputedStyle(document.documentElement).fontSize.slice(0, -2)\r\n      this.$refs.brrageCanvas.width = this.canvasWidth\r\n      this.$refs.brrageCanvas.height = this.canvasHeight\r\n      this.ctx = this.$refs.brrageCanvas.getContext('2d')\r\n      // this.ctx.scale(this.dpr, this.dpr)\r\n      if (this.customSpeed) {\r\n        this.speed = this.customSpeed\r\n      }\r\n      this.list = this.parentList\r\n      this.list.forEach((item) => {\r\n        this.appendItem(item, true)\r\n      })\r\n    },\r\n    getRow() {\r\n      const nullIndex = this.lineList.findIndex((item) => {\r\n        return item.length === 0\r\n      })\r\n      if (nullIndex > -1) {\r\n        return nullIndex + 1\r\n      } else {\r\n        // 拿到每行最后一个元素\r\n        const lastItemList = this.lineList.map((item) => {\r\n          return item[item.length - 1]\r\n        })\r\n        // 寻找元素left + width 最小值\r\n        const min = lastItemList.reduce((init, current) => {\r\n          if (!init) {\r\n            init = current\r\n          } else if (init.left + init.canvas.width > current.left + current.canvas.width) {\r\n            init = current\r\n          }\r\n          return init\r\n        }, null)\r\n        return min.row\r\n      }\r\n    },\r\n    getSpeed(row) {\r\n      return this.speed.find((item) => {\r\n        return item.row === row\r\n      }).speed\r\n    },\r\n    getImage() {\r\n      return this.imgList[Math.floor(Math.random() * this.imgList.length)]\r\n    },\r\n    draw(time) {\r\n      // if (!this.drawList.length) return\r\n\r\n      this.drawIng = true\r\n      this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n      for (let i = 0; i < this.drawList.length; i++) {\r\n        const item = this.drawList[i]\r\n        if (item) {\r\n          if (item.left < -item.canvas.width) {\r\n            // this.drawList.splice(i, 1, null)\r\n            this.lineList[item.row - 1].splice(0, 1)\r\n            this.appendItem(item, false)\r\n          } else if (this.stamp && time) {\r\n            const delay = time - this.stamp\r\n            item.left -= ((item.speed / 16.7) * delay).toFixed(1)\r\n          } else {\r\n            item.left -= item.speed\r\n          }\r\n          // this.$nextTick(() => {\r\n\r\n          this.ctx.drawImage(item.canvas, item.left, item.top)\r\n          // })\r\n        }\r\n      }\r\n      this.stamp = time\r\n      window.requestAnimationFrame(this.draw)\r\n    },\r\n    getTop(row) {\r\n      let top = 0\r\n      if (row === 1) {\r\n        top = 0\r\n      } else {\r\n        for (let i = 0; i < row - 1; i++) {\r\n          top += this.lineMaxHeightList[i]\r\n        }\r\n        top += (row - 1) * this.lineSpace\r\n      }\r\n      return top\r\n    },\r\n    async appendItem(item, needPush) {\r\n      const img = {}\r\n      if (!item.canvas) {\r\n        let wish = item.wish || item[this.itemProps.defaultProps.text]  \r\n        const special = item.userId == this.authorInfo.userId\r\n        if (special) {\r\n          wish = this.authorInfo.username + '：' + wish\r\n        }\r\n        const canvas = await this.createCanvasImg(\r\n          img.dom,\r\n          img.fontSize || this.itemProps.defaultProps.fontSize,\r\n          wish && wish.length > 19 ? wish.slice(0, 20) + '...' : wish,\r\n          img.rate,\r\n          special\r\n        )\r\n        item.canvas = canvas\r\n      }\r\n      const row = this.getRow()\r\n      const speed = this.getSpeed(row)\r\n      const top = this.getTop(row)\r\n      item.row = row\r\n      item.speed = speed\r\n      // 生成canvas\r\n      // 决定item开始滚动的x坐标\r\n      if (!this.lineList[row - 1].length) {\r\n        item.top = top\r\n        item.left = this.canvasWidth\r\n      } else {\r\n        const last = this.lineList[row - 1].slice(-1)[0]\r\n        item.top = top\r\n        if (last.left + last.canvas.width < this.canvasWidth) {\r\n          item.left = this.canvasWidth + 10\r\n        } else {\r\n          item.left = last.left + last.canvas.width + 10\r\n        }\r\n      }\r\n      // console.log(item.left)\r\n      // 添加的时候 更新每一行的最高的那个canvas\r\n      if (this.lineMaxHeightList[row - 1] < item.canvas.height) {\r\n        // if(this.lineMaxHeightList[row] !==0 ){\r\n        //   item.top = top - (item.canvas.height - this.lineMaxHeightList[row - 1])/2\r\n        // }\r\n        this.lineMaxHeightList[row - 1] = item.canvas.height\r\n      }\r\n      this.lineList[row - 1].push(item)\r\n      if (needPush) {\r\n        this.drawList.push(item)\r\n        console.log(this.drawList.length)\r\n      }\r\n      if (!this.drawIng) this.draw()\r\n    },\r\n    // 创建canvas\r\n    async createCanvasImg(img, fontSize, wish, rate = 3, isSpeciel) {\r\n      // const paddingW = +this.itemProps.defaultProps.padding.split('-')[1]\r\n      const px = (this.rem2px / 100) * this.dpr\r\n      // const paddingH = +this.itemProps.defaultProps.padding.split('-')[0]\r\n      const canvas = document.createElement('canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      fontSize = fontSize * px\r\n      ctx.font = `${fontSize}px serif`\r\n      const fontWidth = ctx.measureText(wish).width\r\n      // const height = img ? img.height : paddingH * 2 * px + +fontSize\r\n      const height = 60 * px\r\n      const width = 38 * 2 * px + fontWidth + (isSpeciel ? 46 * 2 * px : 0)\r\n      // 无背景图片时 背景的圆角半径\r\n      const radio = height / 2\r\n      const num = 0\r\n      canvas.height = height\r\n      canvas.width = width\r\n      ctx.fillStyle = isSpeciel\r\n        ? this.itemProps.specialProps.backgroundColor\r\n        : this.itemProps.defaultProps.backgroundColor\r\n      ctx.beginPath()\r\n      ctx.arc(radio, radio, radio, Math.PI / 2, (3 / 2) * Math.PI)\r\n      ctx.lineTo(isSpeciel ? radio + fontWidth + 38 * px : radio + fontWidth, 0)\r\n      ctx.arc(isSpeciel ? radio + fontWidth + 38 * px : radio + fontWidth, radio, radio, (3 / 2) * Math.PI, Math.PI / 2)\r\n      ctx.lineTo(radio, height)\r\n      ctx.closePath()\r\n      ctx.fill()\r\n      ctx.fillStyle = (isSpeciel ? this.itemProps.specialProps.color : this.itemProps.defaultProps.color) || '#000000'\r\n      ctx.font = `${fontSize}px serif`\r\n      if (isSpeciel) {\r\n        let img = null\r\n        if (!this.authorImg) {\r\n          img = await this.clipImg(\r\n            this.authorInfo.useravatar || 'https://static.zhimingfoxue.com/templeimg/20220411172932t6eojh.png',\r\n            38 * px,\r\n            38 * px,\r\n            'cover',\r\n            19 * px\r\n          )\r\n          this.authorImg = img\r\n        } else {\r\n          img = this.authorImg\r\n        }\r\n        ctx.drawImage(img, radio, Math.ceil(fontSize / 4), 38 * px, 38 * px)\r\n        ctx.drawImage(imgV, radio + 26 * px, Math.ceil(fontSize / 4) + 25 * px, 13 * px, 13 * px)\r\n        ctx.fillText(wish, radio + 46 * px, radio + Math.ceil(fontSize / 4))\r\n      } else {\r\n        ctx.fillText(wish, radio, radio + Math.ceil(fontSize / 4))\r\n      }\r\n      return canvas\r\n    },\r\n    clipImg(src, width, height, mode, radius) {\r\n      return new Promise((resolve) => {\r\n        const canvas = document.createElement('canvas')\r\n        canvas.width = width\r\n        canvas.height = height\r\n        const ctx = canvas.getContext('2d')\r\n        const img = new Image()\r\n        // img.crossOrigin = ''\r\n        img.onload = () => {\r\n          const irate = img.width / img.height\r\n          const rate = width / height\r\n          if (radius && Math.min(width, height) / 2 >= radius) {\r\n            ctx.beginPath()\r\n            ctx.moveTo(0, radius)\r\n            ctx.arc(radius, radius, radius, -Math.PI, -Math.PI / 2)\r\n            ctx.lineTo(width - radius, 0)\r\n            ctx.arc(width - radius, radius, radius, -Math.PI / 2, 0)\r\n            ctx.lineTo(width, height - radius)\r\n            ctx.arc(width - radius, height - radius, radius, 0, Math.PI / 2)\r\n            ctx.lineTo(radius, height)\r\n            ctx.arc(radius, height - radius, radius, Math.PI / 2, Math.PI)\r\n            ctx.lineTo(0, radius)\r\n            ctx.clip()\r\n          }\r\n          if (mode === 'cover') {\r\n            if (irate > rate) {\r\n              ctx.drawImage(\r\n                img,\r\n                (img.width - rate * img.height) / 2,\r\n                0,\r\n                rate * img.height,\r\n                img.height,\r\n                0,\r\n                0,\r\n                width,\r\n                height\r\n              )\r\n            } else {\r\n              ctx.drawImage(\r\n                img,\r\n                0,\r\n                (img.height - img.width / rate) / 2,\r\n                img.width,\r\n                img.width / rate,\r\n                0,\r\n                0,\r\n                width,\r\n                height\r\n              )\r\n            }\r\n          }\r\n          resolve(canvas)\r\n        }\r\n        img.src = src\r\n      })\r\n    },\r\n  },\r\n}\r\n<\/script>\r\n\r\n<style lang=\"scss\" scopd>\r\n.canvas {\r\n  width: 7.5rem;\r\n  height: 10rem;\r\n}\r\n.box-0 {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  .content {\r\n    text-align: center;\r\n    height: 72px;\r\n    line-height: 72px;\r\n    background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat center top/300% 72px;\r\n    white-space: nowrap;\r\n  }\r\n  &::before {\r\n    display: block;\r\n    overflow: hidden;\r\n    content: '';\r\n    width: 100px;\r\n    height: 72px;\r\n    background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat left top/375px 72px;\r\n  }\r\n  &::after {\r\n    display: block;\r\n    overflow: hidden;\r\n    content: '';\r\n    width: 100px;\r\n    height: 72px;\r\n    background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat right top/375px 72px;\r\n  }\r\n}\r\n</style>\r\n",'.canvas {\n  width: 7.5rem;\n  height: 10rem;\n}\n\n.box-0 {\n  display: flex;\n  justify-content: flex-start;\n}\n.box-0 .content {\n  text-align: center;\n  height: 72px;\n  line-height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat center top/300% 72px;\n  white-space: nowrap;\n}\n.box-0::before {\n  display: block;\n  overflow: hidden;\n  content: "";\n  width: 100px;\n  height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat left top/375px 72px;\n}\n.box-0::after {\n  display: block;\n  overflow: hidden;\n  content: "";\n  width: 100px;\n  height: 72px;\n  background: url(https://image.brightfuture360.com/static/temple/randeng/box-1.png) no-repeat right top/375px 72px;\n}\n\n/*# sourceMappingURL=canvasBarrage.vue.map */']},media:void 0})}),a,undefined,false,undefined,!1,r,void 0,void 0);export{h as default};
